// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/28/2023 13:51:13"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          lab_8_1_
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab_8_1__vlg_vec_tst();
// constants                                           
// general purpose registers
reg A;
reg B;
reg C;
reg D;
reg E;
// wires                                               
wire f1;
wire f2;
wire f3;
wire pin_name1;
wire pin_name2;
wire pin_name3;
wire pin_name4;
wire pin_name5;
wire pin_name6;
wire pin_name7;

// assign statements (if any)                          
lab_8_1_ i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.B(B),
	.C(C),
	.D(D),
	.E(E),
	.f1(f1),
	.f2(f2),
	.f3(f3),
	.pin_name1(pin_name1),
	.pin_name2(pin_name2),
	.pin_name3(pin_name3),
	.pin_name4(pin_name4),
	.pin_name5(pin_name5),
	.pin_name6(pin_name6),
	.pin_name7(pin_name7)
);
initial 
begin 
#1000000 $finish;
end 

// A
initial
begin
	A = 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
	A = #10000 1'b1;
	A = #10000 1'b0;
end 

// B
initial
begin
	B = 1'b0;
	B = #70000 1'b1;
	B = #10000 1'b0;
end 

// C
initial
begin
	C = 1'b0;
	C = #10000 1'b1;
	C = #10000 1'b0;
	C = #10000 1'b1;
	C = #10000 1'b0;
	C = #30000 1'b1;
	C = #10000 1'b0;
	C = #30000 1'b1;
	C = #10000 1'b0;
end 

// D
initial
begin
	D = 1'b0;
	D = #10000 1'b1;
	D = #10000 1'b0;
	D = #70000 1'b1;
	D = #10000 1'b0;
	D = #10000 1'b1;
	D = #10000 1'b0;
end 

// E
initial
begin
	E = 1'b0;
	E = #50000 1'b1;
	E = #10000 1'b0;
	E = #30000 1'b1;
	E = #10000 1'b0;
	E = #10000 1'b1;
	E = #10000 1'b0;
end 
endmodule

